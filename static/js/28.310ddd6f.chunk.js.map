{"version":3,"sources":["views/dashboard/submitLineup/SubmitLineup.js"],"names":["SubmitLineup","React","checked","setChecked","IsLoading","setIsLoading","handleToggle","value","currentIndex","indexOf","newChecked","length","push","splice","alert","console","log","variant","sx","mt","container","direction","spacing","item","xs","md","alignItems","justify","style","justifyContent","display","src","loading","width","height","alt","textAlign","fontSize","icon","faCalendarDays","mr","label","faTrophy","faLocationDot","faPerson","dense","bgcolor","map","labelId","secondaryAction","edge","onChange","inputProps","disablePadding","id","primary","loadingIndicator","color","onClick"],"mappings":"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","file":"static/js/28.310ddd6f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport {CardContent} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCalendarDays} from '@fortawesome/free-solid-svg-icons';\r\nimport {faTrophy} from '@fortawesome/free-solid-svg-icons';\r\nimport {faPerson} from '@fortawesome/free-solid-svg-icons';\r\nimport {faLocationDot} from '@fortawesome/free-solid-svg-icons';\r\nimport Chip from '@mui/material/Chip';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport LoadingButton from '@material-ui/lab/LoadingButton';\r\nimport CardActions from '@mui/material/CardActions';\r\n\r\nfunction SubmitLineup() {\r\n    const [checked, setChecked] = React.useState([]);\r\n    const [IsLoading, setIsLoading] = React.useState(false);\r\n\r\n    const SubmitClick = () => {\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (newChecked.length !== 2) {\r\n            if (currentIndex === -1) {\r\n                newChecked.push(value);\r\n            } else {\r\n                newChecked.splice(currentIndex, 1);\r\n            }\r\n        } else {\r\n            alert('Limit reached');\r\n            console.log(newChecked);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" sx={{mt: 1}}>\r\n            <CardContent>\r\n                <Grid container direction=\"row\" spacing={2}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Grid container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"center\">\r\n                                    <Grid\r\n                                        item\r\n                                        xs={5}\r\n                                        direction=\"column\"\r\n                                        style={{justifyContent: 'center', display: 'flex', alignItems: 'center'}}\r\n                                    >\r\n                                        <img\r\n                                            src=\"https://upload.wikimedia.org/wikipedia/en/thumb/7/7a/Manchester_United_FC_crest.svg/800px-Manchester_United_FC_crest.svg.png\"\r\n                                            loading=\"lazy\"\r\n                                            style={{width: '50px', height: '50px'}}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={2} style={{justifyContent: 'center', display: 'flex'}}>\r\n                                        <Stack>\r\n                                            <p style={{textAlign: 'center', fontSize: 13}}>\r\n                                                v/s <br />\r\n                                                <span>12.02.2023</span>\r\n                                            </p>\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid item xs={5} style={{justifyContent: 'center', display: 'flex'}}>\r\n                                        <img\r\n                                            src=\"https://upload.wikimedia.org/wikipedia/en/thumb/5/54/Leeds_United_F.C._logo.svg/1200px-Leeds_United_F.C._logo.svg.png\"\r\n                                            loading=\"lazy\"\r\n                                            style={{width: '50px', height: '50px'}}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container direction=\"row\" spacing={2} sx={{mt: 2}}>\r\n                                    <Grid item xs={12} direction=\"column\">\r\n                                        <span style={{fontSize: 20}}>\r\n                                            <FontAwesomeIcon icon={faCalendarDays} sx={{mr: 2}} />\r\n                                            &nbsp; <Chip label=\"12 Febuary 2023, 18:00\" />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} direction=\"column\">\r\n                                        <span style={{fontSize: 20}}>\r\n                                            <FontAwesomeIcon icon={faTrophy} sx={{mr: 2}} />\r\n                                            &nbsp;\r\n                                            <Chip label=\"Bel Air Super League\" />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} direction=\"column\">\r\n                                        <span style={{fontSize: 20}}>\r\n                                            <FontAwesomeIcon icon={faLocationDot} sx={{mr: 2}} />\r\n                                            &nbsp;\r\n                                            <Chip label=\"Bel air, Mauritius\" />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} direction=\"column\">\r\n                                        <span style={{fontSize: 20}}>\r\n                                            <FontAwesomeIcon icon={faPerson} sx={{mr: 2}} />\r\n                                            &nbsp; <Chip label=\"M.Daboo\" />\r\n                                        </span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <List dense sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n                                    {[0, 1, 2, 3].map((value) => {\r\n                                        const labelId = `checkbox-list-secondary-label-${value}`;\r\n                                        return (\r\n                                            <>\r\n                                                <ListSubheader>Goalkeeper</ListSubheader>\r\n                                                <ListItem\r\n                                                    key={value}\r\n                                                    secondaryAction={\r\n                                                        <Checkbox\r\n                                                            edge=\"end\"\r\n                                                            onChange={handleToggle(value)}\r\n                                                            checked={checked.indexOf(value) !== -1}\r\n                                                            inputProps={{'aria-labelledby': labelId}}\r\n                                                        />\r\n                                                    }\r\n                                                    disablePadding\r\n                                                >\r\n                                                    <ListItemButton>\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar\r\n                                                                alt={`Avatar n°${value + 1}`}\r\n                                                                src={`/static/images/avatar/${value + 1}.jpg`}\r\n                                                            />\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n                                                    </ListItemButton>\r\n                                                </ListItem>\r\n                                            </>\r\n                                        );\r\n                                    })}\r\n                                </List>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <LoadingButton\r\n                                    loading={IsLoading}\r\n                                    loadingIndicator=\"Loading…\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{width: '100%'}}\r\n                                    onClick={() => {\r\n                                        SubmitClick();\r\n                                    }}\r\n                                >\r\n                                    Submit Lineup\r\n                                </LoadingButton>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SubmitLineup;\r\n"],"sourceRoot":""}