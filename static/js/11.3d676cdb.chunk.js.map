{"version":3,"sources":["hooks/useScriptRef.js","assets/images/icons/social-google.svg","assets/images/logo.svg","views/pages/authentication/login/FirebaseLogin.js","views/pages/authentication/authentication3/Login3.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","useStyles","makeStyles","theme","root","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","marginTop","marginBottom","forgot","textDecoration","purple","main","loginIcon","marginRight","title","login","dark","loginput","top","left","display","startAdornment","width","FirebaseLogin","props","className","rest","classes","customization","useSelector","state","scriptedRef","React","useState","showPassword","setShowPassword","checked","setChecked","googleHandler","a","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Fragment","container","direction","justifyContent","item","xs","disableElevation","fullWidth","onClick","size","variant","src","Google","alt","alignItems","orientation","sx","borderRadius","disableRipple","disabled","mb","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","clsx","Boolean","htmlFor","id","type","value","name","onBlur","onChange","label","inputProps","notchedOutline","endAdornment","position","aria-label","onMouseDown","edge","control","target","mt","height","minHeight","maxWidth","card","overflow","flexBasis","content","Login","useTheme","matchDownSM","useMediaQuery","p","textAlign","to","logo","gutterBottom","component","RouterLink","Link","href"],"mappings":"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","file":"static/js/11.3d676cdb.chunk.js","sourcesContent":["import {useEffect, useRef} from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","export default __webpack_public_path__ + \"static/media/logo.0cdd96fa.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\nimport {useSelector} from 'react-redux';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    Typography\n} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\n\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from './../../../../assets/images/icons/social-google.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none',\n        color: theme.palette.purple.main\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    }\n}));\n\nconst FirebaseLogin = (props, {className, ...rest}) => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const googleHandler = async () => {\n\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            Sign in with Email address\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\n                    try {\n\n                        if (scriptedRef.current) {\n                            setStatus({success: true});\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({success: false});\n                            setErrors({submit: err.message});\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label='Email Address / Username'\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label='Password'\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={<React.Fragment>Keep me logged in</React.Fragment>}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography\n                                    variant=\"subtitle1\">\n                                    Forgot Password?\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign in\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseLogin;\n","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Card, CardContent, Divider, Grid, Link, makeStyles, Typography, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport FirebaseLogin from '../login/FirebaseLogin';\n\nimport logo from './../../../../assets/images/logo.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        height: '100%',\n        minHeight: '100vh',\n        width: '100%',\n        maxWidth: 'calc(100% + 16px)'\n    },\n    card: {\n        margin: theme.spacing(0) + ' auto',\n        maxWidth: '475px',\n        overflow: 'visible',\n        display: 'flex',\n        position: 'relative',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: '80%'\n        }\n    },\n    content: {\n        padding: theme.spacing(5),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3)\n        }\n    },\n    title: {\n        color: theme.palette.grey[600],\n        textDecoration: 'none'\n    }\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Grid container justifyContent={matchDownSM ? 'center' : 'space-between'} alignItems=\"center\" className={classes.root}>\n            <Grid item xs={12} sx={{minHeight: '100vh', height: '100%'}}>\n                <Grid\n                    sx={{minHeight: '100vh', height: '100%', p: matchDownSM ? 0 : '0 80px'}}\n                    container\n                    direction=\"column\"\n                    alignItems={matchDownSM ? 'center' : 'flex-start'}\n                    spacing={matchDownSM ? 5 : 6}\n                    justifyContent=\"space-between\"\n                >\n                    <Grid item xs={12} sx={{mt: '40px', width: '100%', textAlign: 'center'}}>\n                        <RouterLink to=\"#\">\n                            <img alt=\"Auth method\" src={logo} width=\"100\" />\n                        </RouterLink>\n                    </Grid>\n                    <Grid item xs={12} container justifyContent=\"center\" alignItems=\"center\">\n                        <Card className={classes.card}>\n                            <CardContent className={classes.content}>\n                                <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\n                                                    <Grid item container direction=\"column\" alignItems=\"center\">\n                                                        <Grid item>\n                                                            <Typography\n                                                                color={theme.palette.purple.main}\n                                                                gutterBottom\n                                                                variant={matchDownSM ? 'h3' : 'h2'}\n                                                            >\n                                                                Hi, Welcome Back\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography variant=\"caption\" fontSize=\"16px\">\n                                                            {' '}\n                                                            Enter your credentials to continue\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseLogin login={3} />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/pages/register/register3\"\n                                                variant=\"subtitle1\"\n                                                className={classes.title}\n                                            >\n                                                Don't have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid\n                        sx={{mb: '40px'}}\n                        item\n                        container\n                        justifyContent={matchDownSM ? 'center' : 'space-between'}\n                        direction={matchDownSM ? 'column' : 'row'}\n                        alignItems=\"center\"\n                        spacing={matchDownSM ? 2 : 0}\n                    >\n                        <Grid item>\n                            <Typography component={Link} href='https://berrydashboard.io' target='_blanks' variant=\"subtitle1\" color={theme.palette.grey[600]}>\n                                www.berrydashboard.io\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography component={Link} href='https://codedthemes.com' target='_blanks' variant=\"subtitle1\" color={theme.palette.grey[600]}>\n                                &copy; codedthemes.com\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}